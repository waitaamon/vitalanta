//border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}


//border
@mixin add-border($size, $color, $position){
  @if $position == 'all'{
    border:$size solid $color;
  } @else if $position == 'top'{
    border-top: $size solid $color;
  } @else if $position == 'bottom'{
    border-bottom: $size solid $color;
  } @else if $position == 'left'{
    border-left: $size solid $color;
  } @else if $position == 'right'{
    border-right: $size solid $color;
  } @else if $position == 'top-bottom'{
    border-top: $size solid $color;
    border-bottom: $size solid $color;
  }@else if $position == 'right-left'{
    border-left: $size solid $color;
    border-right: $size solid $color;
  }
}

//background
@mixin add-background($color){
  background: $color;
  @if $color == $brand-primary{

    color: $text-color-a;

  } @else if $color == $brand-secondary{

    color: $text-color-b;
  }
  @else{
    color: #fff;
  }
}


//transition
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

@mixin boxShadow($val){
  -moz-box-shadow: $val;
  -webkit-box-shadow: $val;
  box-shadow: $val;
}

@mixin boxSizing{
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
